16
{"last_modification_time":1543281009,"language":1,"import_file":"c:/users/daniel/documents/#pros/2018-2019/vex-2018-2019-blue-team/include/pid.h","args_hash":908286324491277847,"includes":[],"dependencies":[],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":3670443015939306073,"detailed_name":"(anon struct)","short_name_offset":0,"short_name_size":13,"kind":23,"hover":"","comments":"","declarations":[],"spell":"4:9-4:15|-1|1|2","extent":"4:9-16:2|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[0,1,2,3,4,5,6,7,8,9,10],"instances":[],"uses":[]},{"id":1,"usr":10836703699630248761,"detailed_name":"PID_properties_t","short_name_offset":0,"short_name_size":16,"kind":252,"hover":"","comments":"","declarations":[],"spell":"16:3-16:19|-1|1|2","extent":"4:1-16:19|-1|1|0","alias_of":0,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["16:3-16:19|-1|1|4","18:9-18:25|-1|1|4","25:1-25:17|-1|1|4","25:34-25:50|-1|1|4","33:1-33:17|-1|1|4","33:35-33:51|-1|1|4","42:34-42:50|-1|1|4","42:57-42:73|-1|1|4","49:14-49:30|-1|1|4","56:15-56:31|-1|1|4","68:1-68:17|-1|1|4","76:1-76:17|-1|1|4","76:42-76:58|-1|1|4","86:1-86:17|-1|1|4","96:1-96:17|-1|1|4"]},{"id":2,"usr":22,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,1,2],"uses":[]},{"id":3,"usr":19,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[3,4,5,6,7,10],"uses":[]},{"id":4,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[8,9],"uses":[]},{"id":5,"usr":13121727870077563041,"detailed_name":"PID_array_t","short_name_offset":0,"short_name_size":11,"kind":252,"hover":"typedef PID_properties_t *PID_array_t","comments":"","declarations":[],"spell":"18:27-18:38|-1|1|2","extent":"18:1-18:38|-1|1|0","alias_of":1,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["18:27-18:38|-1|1|4","42:1-42:12|-1|1|4"]}],"funcs":[{"id":0,"usr":5285267588964809128,"detailed_name":"PID_properties_t generateNextPID(PID_properties_t prop)","short_name_offset":17,"short_name_size":15,"kind":12,"storage":1,"hover":"","comments":"Function:\t\tgenerateNextPID\r\nPurpose:\t\t\tUpdates the PID_properties_t by running through one pass of the PID algorithm\r\nArgument:\t\tprop = the property to be updated\r\nReturn:\t\t\tthe next PID_properties_t object","declarations":[{"spell":"25:18-25:33|-1|1|1","param_spellings":["25:51-25:55"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":4324427443444734431,"detailed_name":"PID_properties_t generateMovedPID(PID_properties_t prop, long long targetDelta)","short_name_offset":17,"short_name_size":16,"kind":12,"storage":1,"hover":"","comments":"Function:\t\tgenerateMovedPID\r\nPurpose:\t\t\tmoves the target property of prop by targetDelta\r\nArgument:\t\tprop = the property to which the target will be moved\r\n                 targetDelta = amount to add to prop's target\r\nReturn:\t\t\tthe updated PID_properties_t object","declarations":[{"spell":"33:18-33:34|-1|1|1","param_spellings":["33:52-33:56","33:68-33:79"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":13142538654914652467,"detailed_name":"PID_array_t generateRotatedDrive(PID_properties_t left, PID_properties_t right, long long target)","short_name_offset":12,"short_name_size":20,"kind":12,"storage":1,"hover":"","comments":"Function:        generateRotatedDrive\r\nPurpose:         rotates the robot's drive by addint the targets of right and left to target and -target respectively\r\nArgument:        left = the properties of the left side of the drive train\r\n                 right = the properties of the right side of the drive train\r\n                 target = the amount to add to right and subtract from left\r\nReturn:          the array of PID_properties_t where index 0 is left and index 1 is right","declarations":[{"spell":"42:13-42:33|-1|1|1","param_spellings":["42:51-42:55","42:74-42:79","42:91-42:97"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":4018509236528710688,"detailed_name":"int atTarget(PID_properties_t prop)","short_name_offset":4,"short_name_size":8,"kind":12,"storage":1,"hover":"","comments":"Function:\t\tatTarget\r\nPurpose:\t\t\tdetermines whether the motor has successfully moved to the target\r\nArgument:\t\tprop = the property to test\r\nReturn:\t\t\ttrue if the magnitude of error is less than 5 and isStopped() is true, false therwise","declarations":[{"spell":"49:5-49:13|-1|1|1","param_spellings":["49:31-49:35"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":1304923526189286737,"detailed_name":"int isStopped(PID_properties_t prop)","short_name_offset":4,"short_name_size":9,"kind":12,"storage":1,"hover":"","comments":"Function:\t\tisStopped\r\nPurpose:\t\t\tdetermines whether the motors have stopped moving based on derivative\r\nArgument:\t\tprop = the property to test\r\nReturn:\t\t\t1 if the derivative is 0, 0 therwise","declarations":[{"spell":"56:5-56:14|-1|1|1","param_spellings":["56:32-56:36"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":162247951787025851,"detailed_name":"PID_properties_t createPID(double Kp, double Ki, double Kd, int *motorPorts, int numMotorPorts, long long startSlowingValue)","short_name_offset":17,"short_name_size":9,"kind":12,"storage":1,"hover":"","comments":"Function:\t\tcreatePID\r\nPurpose:\t\t\tGenerates a new PID_properties_t object using the parameters\r\nArgument:\t\tKp = multiplier for the proportion\r\n                 Ki = multiplier for the integral\r\n                 Kd = multiplier for the derivative\r\n                 motorPorts = the motor ports that are associated with the PID_properties_t\r\n\t\t\t\t\tnumMotorPorts = the length of motorPorts\r\n\t\t\t\t\tstartSlowingValue = the error value where the motors will start to slow down\r\nReturn:\t\t\tThe created PID_properties_t object","declarations":[{"spell":"68:18-68:27|-1|1|1","param_spellings":["68:35-68:37","68:46-68:48","68:57-68:59","68:66-68:76","68:82-68:95","68:107-68:124"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":6,"usr":12148758152198355598,"detailed_name":"PID_properties_t applyRealTimeCorrection(PID_properties_t prop)","short_name_offset":17,"short_name_size":23,"kind":12,"storage":1,"hover":"","comments":"!EXPERIMENTAL!\r\nFunction:\t\tapplyRealTimeCorrection\r\nPurpose:         adjusts the derivative of the PID_properties_t object so that it will be more accurate on the next move\r\nArgument:        prop = the PID_properties_t object to which the algorithm will be applied\r\nReturn:\t\t\tthe next PID_properties_t object","declarations":[{"spell":"76:18-76:41|-1|1|1","param_spellings":["76:59-76:63"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":7,"usr":12548742323708701975,"detailed_name":"PID_properties_t findKpid_Ziegler(int *motorPorts, int numMotorPorts, long long startSlowingValue, long long target)","short_name_offset":17,"short_name_size":16,"kind":12,"storage":1,"hover":"","comments":"Function:        findKpid_Ziegler\r\nPurpose:         find the constants for PID using Ziegler-Nichols method\r\nArgument:        motorPorts = the motor ports that are associated with the PID_properties_t\r\n                 numMotorPorts = the length of numMotorPorts\r\n                 startSlowingValue = the error value where teh motors will start to slow down\r\n                 target = the distance to move the motor for testing\r\nReturn:          the created PID_properties_t object","declarations":[{"spell":"86:18-86:34|-1|1|1","param_spellings":["86:40-86:50","86:56-86:69","86:81-86:98","86:110-86:116"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":8,"usr":14544656595460898334,"detailed_name":"PID_properties_t findKpid_manual(int *motorPorts, int numMotorPorts, long long startSlowingValue, long long target)","short_name_offset":17,"short_name_size":15,"kind":12,"storage":1,"hover":"","comments":"Function:        findKpid_manual\r\nPurpose:         find the constants for PID using manual method\r\nArgument:        motorPorts = the motor ports that are associated with the PID_properties_t\r\n                 numMotorPorts = the length of numMotorPorts\r\n                 startSlowingValue = the error value where teh motors will start to slow down\r\n                 target = the distance to move the motor for testing\r\nReturn:          the created PID_properties_t object","declarations":[{"spell":"96:18-96:33|-1|1|1","param_spellings":["96:39-96:49","96:55-96:68","96:80-96:97","96:109-96:115"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":17008572698698482960,"detailed_name":"double (anon struct)::Kp","short_name_offset":22,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"5:9-5:11|0|2|2","extent":"5:2-5:11|0|2|0","type":2,"uses":[],"kind":8,"storage":0},{"id":1,"usr":3380679416838628591,"detailed_name":"double (anon struct)::Ki","short_name_offset":22,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"6:9-6:11|0|2|2","extent":"6:2-6:11|0|2|0","type":2,"uses":[],"kind":8,"storage":0},{"id":2,"usr":2621783196870167946,"detailed_name":"double (anon struct)::Kd","short_name_offset":22,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"7:9-7:11|0|2|2","extent":"7:2-7:11|0|2|0","type":2,"uses":[],"kind":8,"storage":0},{"id":3,"usr":367943496265479721,"detailed_name":"long long (anon struct)::error","short_name_offset":25,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"8:12-8:17|0|2|2","extent":"8:2-8:17|0|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":4,"usr":7242980594868068987,"detailed_name":"long long (anon struct)::integral","short_name_offset":25,"short_name_size":8,"hover":"","comments":"","declarations":[],"spell":"9:12-9:20|0|2|2","extent":"9:2-9:20|0|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":5,"usr":840920394551039113,"detailed_name":"long long (anon struct)::derivative","short_name_offset":25,"short_name_size":10,"hover":"","comments":"","declarations":[],"spell":"10:12-10:22|0|2|2","extent":"10:2-10:22|0|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":6,"usr":7745900961224024746,"detailed_name":"long long (anon struct)::target","short_name_offset":25,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"11:12-11:18|0|2|2","extent":"11:2-11:18|0|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":7,"usr":14215171170505580207,"detailed_name":"long long (anon struct)::previousError","short_name_offset":25,"short_name_size":13,"hover":"","comments":"","declarations":[],"spell":"12:12-12:25|0|2|2","extent":"12:2-12:25|0|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":8,"usr":6370796333443628835,"detailed_name":"int *(anon struct)::motorPorts","short_name_offset":20,"short_name_size":10,"hover":"","comments":"","declarations":[],"spell":"13:7-13:17|0|2|2","extent":"13:2-13:17|0|2|0","type":4,"uses":[],"kind":8,"storage":0},{"id":9,"usr":3933794635096581206,"detailed_name":"int (anon struct)::numMotorPorts","short_name_offset":19,"short_name_size":13,"hover":"","comments":"","declarations":[],"spell":"14:6-14:19|0|2|2","extent":"14:2-14:19|0|2|0","type":4,"uses":[],"kind":8,"storage":0},{"id":10,"usr":9245654757958305564,"detailed_name":"long long (anon struct)::startSlowingValue","short_name_offset":25,"short_name_size":17,"hover":"","comments":"","declarations":[],"spell":"15:12-15:29|0|2|2","extent":"15:2-15:29|0|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":11,"usr":2634896725391926851,"detailed_name":"_PID_H_","short_name_offset":0,"short_name_size":7,"hover":"#define _PID_H_","comments":"","declarations":[],"spell":"2:9-2:16|-1|1|2","extent":"2:9-2:16|-1|1|0","uses":[],"kind":255,"storage":0}]}